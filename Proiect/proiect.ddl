-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-12-23 02:04:19 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE ambalaj (
    id_ambalaj             NUMBER(3) NOT NULL,
    marime                 NUMBER(3) NOT NULL,
    cantitate_am           NUMBER(3) NOT NULL,
    tipuri_ambalaje_id_tip NUMBER(3) NOT NULL
);

ALTER TABLE ambalaj ADD CONSTRAINT ambalaj_cantitate_am_ck CHECK ( cantitate_am >= 0 );

ALTER TABLE ambalaj ADD CONSTRAINT ambalaj_pk PRIMARY KEY ( id_ambalaj );

CREATE TABLE etichete (
    etichete_id            NUMBER(3) NOT NULL,
    data_fabricare         DATE NOT NULL,
    bucati                 NUMBER(3) NOT NULL,
    ambalaj_id_ambalaj     NUMBER(3) NOT NULL,
    produs_finit_id_produs NUMBER(3) NOT NULL
);

ALTER TABLE etichete ADD CONSTRAINT etichete_bucati_ck CHECK ( bucati > 0 );

ALTER TABLE etichete ADD CONSTRAINT etichete_pk PRIMARY KEY ( etichete_id );

CREATE TABLE materia_prima (
    id_mp       NUMBER(3) NOT NULL,
    nume_produs VARCHAR2(30) NOT NULL,
    isapicol    NUMBER(1) NOT NULL,
    stoc        NUMBER(3) NOT NULL
);

ALTER TABLE materia_prima
    ADD CONSTRAINT materiaprima_numeprodus_ck CHECK ( REGEXP_LIKE ( nume_produs,
                                                                    '^[A-Za-z]+((\s)?([a-z])+)*$' ) );

ALTER TABLE materia_prima ADD CONSTRAINT materia_prima_stoc_ck CHECK ( stoc >= 0 );

ALTER TABLE materia_prima ADD CONSTRAINT materia_prima_pk PRIMARY KEY ( id_mp );

ALTER TABLE materia_prima ADD CONSTRAINT materia_prima_nume_produs_un UNIQUE ( nume_produs );

CREATE TABLE produs_finit (
    id_produs          NUMBER(3) NOT NULL,
    denumire           VARCHAR2(30) NOT NULL,
    utilizare          VARCHAR2(30) NOT NULL,
    pret               NUMBER(3) NOT NULL,
    cantitate_pf       NUMBER(3) NOT NULL,
    ambalaj_id_ambalaj NUMBER(3) NOT NULL
);

ALTER TABLE produs_finit
    ADD CONSTRAINT produs_finit_denumire_ck CHECK ( REGEXP_LIKE ( nume_produs,
                                                                  '^[A-Za-z]+((\s)?([a-z])+)*$' ) );

ALTER TABLE produs_finit
    ADD CONSTRAINT produs_finit_utilizare_ck CHECK ( REGEXP_LIKE ( utilizare,
                                                                   '^[A-Za-z]+((\s)?([a-z])+)*$' ) );

ALTER TABLE produs_finit ADD CONSTRAINT produs_finit_pret_ck CHECK ( pret > 0 );

ALTER TABLE produs_finit ADD CONSTRAINT produs_finit_cantitate_pf_ck CHECK ( cantitate_pf >= 0 );

ALTER TABLE produs_finit ADD CONSTRAINT produs_finit_pk PRIMARY KEY ( id_produs );

CREATE TABLE reteta (
    produs_finit_id_produs NUMBER(3) NOT NULL,
    materia_prima_id_mp    NUMBER(3) NOT NULL,
    procent                NUMBER(2) NOT NULL
);

ALTER TABLE reteta ADD CONSTRAINT reteta_pk PRIMARY KEY ( produs_finit_id_produs,
                                                          materia_prima_id_mp );

CREATE TABLE termen (
    data_expirarii       DATE NOT NULL,
    etichete_etichete_id NUMBER(3) NOT NULL
);

CREATE UNIQUE INDEX termen__idx ON
    termen (
        etichete_etichete_id
    ASC );

CREATE TABLE tipuri_ambalaje (
    id_tip   NUMBER(3) NOT NULL,
    denumire VARCHAR2(30) NOT NULL
);

ALTER TABLE tipuri_ambalaje
    ADD CONSTRAINT tipuri_ambalaje_denumire_ck CHECK ( REGEXP_LIKE ( denumire,
                                                                     '^[A-Za-z]+((\s)?([a-z])+)*$' ) );

ALTER TABLE tipuri_ambalaje ADD CONSTRAINT tipuri_ambalaje_pk PRIMARY KEY ( id_tip );

ALTER TABLE tipuri_ambalaje ADD CONSTRAINT tipuri_ambalaje_denumire_un UNIQUE ( denumire );

ALTER TABLE ambalaj
    ADD CONSTRAINT ambalaj_tipuri_ambalaje_fk FOREIGN KEY ( tipuri_ambalaje_id_tip )
        REFERENCES tipuri_ambalaje ( id_tip );

ALTER TABLE etichete
    ADD CONSTRAINT etichete_ambalaj_fk FOREIGN KEY ( ambalaj_id_ambalaj )
        REFERENCES ambalaj ( id_ambalaj );

ALTER TABLE etichete
    ADD CONSTRAINT etichete_produs_finit_fk FOREIGN KEY ( produs_finit_id_produs )
        REFERENCES produs_finit ( id_produs );

ALTER TABLE produs_finit
    ADD CONSTRAINT produs_finit_ambalaj_fk FOREIGN KEY ( ambalaj_id_ambalaj )
        REFERENCES ambalaj ( id_ambalaj );

ALTER TABLE reteta
    ADD CONSTRAINT reteta_materia_prima_fk FOREIGN KEY ( materia_prima_id_mp )
        REFERENCES materia_prima ( id_mp );

ALTER TABLE reteta
    ADD CONSTRAINT reteta_produs_finit_fk FOREIGN KEY ( produs_finit_id_produs )
        REFERENCES produs_finit ( id_produs );

ALTER TABLE termen
    ADD CONSTRAINT termen_etichete_fk FOREIGN KEY ( etichete_etichete_id )
        REFERENCES etichete ( etichete_id );

CREATE SEQUENCE ambalaj_id_ambalaj_seq START WITH 100 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ambalaj_id_ambalaj_trg BEFORE
    INSERT ON ambalaj
    FOR EACH ROW
    WHEN ( new.id_ambalaj IS NULL )
BEGIN
    :new.id_ambalaj := ambalaj_id_ambalaj_seq.nextval;
END;
/

CREATE SEQUENCE etichete_etichete_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER etichete_etichete_id_trg BEFORE
    INSERT ON etichete
    FOR EACH ROW
    WHEN ( new.etichete_id IS NULL )
BEGIN
    :new.etichete_id := etichete_etichete_id_seq.nextval;
END;
/

CREATE SEQUENCE materia_prima_id_mp_seq START WITH 300 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER materia_prima_id_mp_trg BEFORE
    INSERT ON materia_prima
    FOR EACH ROW
    WHEN ( new.id_mp IS NULL )
BEGIN
    :new.id_mp := materia_prima_id_mp_seq.nextval;
END;
/

CREATE SEQUENCE produs_finit_id_produs_seq START WITH 200 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER produs_finit_id_produs_trg BEFORE
    INSERT ON produs_finit
    FOR EACH ROW
    WHEN ( new.id_produs IS NULL )
BEGIN
    :new.id_produs := produs_finit_id_produs_seq.nextval;
END;
/

CREATE SEQUENCE tipuri_ambalaje_id_tip_seq START WITH 400 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tipuri_ambalaje_id_tip_trg BEFORE
    INSERT ON tipuri_ambalaje
    FOR EACH ROW
    WHEN ( new.id_tip IS NULL )
BEGIN
    :new.id_tip := tipuri_ambalaje_id_tip_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             1
-- ALTER TABLE                             24
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
